/**
 * Sunday Render Service
 * Sunday Render Service
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: molnar.balint@mdy.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package hu.sundayit.renderservice.client;

import hu.sundayit.renderservice.client.ApiException;
import hu.sundayit.renderservice.models.DocumentTypeEntity;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DocumenttyperestApi
 */
public class DocumenttyperestApiTest {

    private final DocumenttyperestApi api = new DocumenttyperestApi();

    
    /**
     * Deletes a document type
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDocumentTypeUsingDELETETest() throws ApiException {
        Long id = null;
        // api.deleteDocumentTypeUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * Returns the document type entity by the ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDocumentTypeByIdUsingGETTest() throws ApiException {
        Long id = null;
        // DocumentTypeEntity response = api.getDocumentTypeByIdUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * Returns a list of document type entities by their project id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDocumentTypesByProjectIdUsingGETTest() throws ApiException {
        Long projectEntityId = null;
        // List<DocumentTypeEntity> response = api.getDocumentTypesByProjectIdUsingGET(projectEntityId);

        // TODO: test validations
    }
    
    /**
     * insertDocumentType
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void insertDocumentTypeUsingPOSTTest() throws ApiException {
        DocumentTypeEntity documentTypeEntity = null;
        // DocumentTypeEntity response = api.insertDocumentTypeUsingPOST(documentTypeEntity);

        // TODO: test validations
    }
    
    /**
     * Updates an existing document type
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDocumentTypeUsingPOSTTest() throws ApiException {
        Long id = null;
        DocumentTypeEntity documentTypeEntity = null;
        // DocumentTypeEntity response = api.updateDocumentTypeUsingPOST(id, documentTypeEntity);

        // TODO: test validations
    }
    
}
