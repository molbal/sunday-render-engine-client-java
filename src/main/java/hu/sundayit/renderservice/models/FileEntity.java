/**
 * Sunday Render Service
 * Sunday Render Service
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: molnar.balint@mdy.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package hu.sundayit.renderservice.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * FileEntity
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-16T12:26:57.599+02:00")
public class FileEntity   {
  @SerializedName("autoEmbed")
  private Boolean autoEmbed = null;

  @SerializedName("documentTypeId")
  private Long documentTypeId = null;

  @SerializedName("fileContents")
  private byte[] fileContents = null;

  @SerializedName("fileName")
  private String fileName = null;

  /**
   * Enum, mandatory.Scope for the file
   */
  public enum FileScopeEnum {
    @SerializedName("PROJECT")
    PROJECT("PROJECT"),
    
    @SerializedName("DOCUMENT")
    DOCUMENT("DOCUMENT");

    private String value;

    FileScopeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("fileScope")
  private FileScopeEnum fileScope = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("projectId")
  private Long projectId = null;

  /**
   * Enum, mandatory. Type of the file.
   */
  public enum TypeEnum {
    @SerializedName("HTML")
    HTML("HTML"),
    
    @SerializedName("SCRIPT")
    SCRIPT("SCRIPT"),
    
    @SerializedName("STYLESHEET")
    STYLESHEET("STYLESHEET"),
    
    @SerializedName("IMAGE")
    IMAGE("IMAGE"),
    
    @SerializedName("OTHER")
    OTHER("OTHER"),
    
    @SerializedName("MARKDOWN")
    MARKDOWN("MARKDOWN");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public FileEntity autoEmbed(Boolean autoEmbed) {
    this.autoEmbed = autoEmbed;
    return this;
  }

   /**
   * If set to true, this will automatically be embedded to all files in the project. Only applicable if in project scope.
   * @return autoEmbed
  **/
  @ApiModelProperty(example = "null", value = "If set to true, this will automatically be embedded to all files in the project. Only applicable if in project scope.")
  public Boolean getAutoEmbed() {
    return autoEmbed;
  }

  public void setAutoEmbed(Boolean autoEmbed) {
    this.autoEmbed = autoEmbed;
  }

  public FileEntity documentTypeId(Long documentTypeId) {
    this.documentTypeId = documentTypeId;
    return this;
  }

   /**
   * Document Type ID
   * @return documentTypeId
  **/
  @ApiModelProperty(example = "null", value = "Document Type ID")
  public Long getDocumentTypeId() {
    return documentTypeId;
  }

  public void setDocumentTypeId(Long documentTypeId) {
    this.documentTypeId = documentTypeId;
  }

  public FileEntity fileContents(byte[] fileContents) {
    this.fileContents = fileContents;
    return this;
  }

   /**
   * File contents, as a byte array.
   * @return fileContents
  **/
  @ApiModelProperty(example = "null", value = "File contents, as a byte array.")
  public byte[] getFileContents() {
    return fileContents;
  }

  public void setFileContents(byte[] fileContents) {
    this.fileContents = fileContents;
  }

  public FileEntity fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Mandatory field. This is the filename, including extension of the file.
   * @return fileName
  **/
  @ApiModelProperty(example = "null", value = "Mandatory field. This is the filename, including extension of the file.")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public FileEntity fileScope(FileScopeEnum fileScope) {
    this.fileScope = fileScope;
    return this;
  }

   /**
   * Enum, mandatory.Scope for the file
   * @return fileScope
  **/
  @ApiModelProperty(example = "null", value = "Enum, mandatory.Scope for the file")
  public FileScopeEnum getFileScope() {
    return fileScope;
  }

  public void setFileScope(FileScopeEnum fileScope) {
    this.fileScope = fileScope;
  }

  public FileEntity id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public FileEntity projectId(Long projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Mandatory field. ID of the parent project.
   * @return projectId
  **/
  @ApiModelProperty(example = "null", value = "Mandatory field. ID of the parent project.")
  public Long getProjectId() {
    return projectId;
  }

  public void setProjectId(Long projectId) {
    this.projectId = projectId;
  }

  public FileEntity type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Enum, mandatory. Type of the file.
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "Enum, mandatory. Type of the file.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileEntity fileEntity = (FileEntity) o;
    return Objects.equals(this.autoEmbed, fileEntity.autoEmbed) &&
        Objects.equals(this.documentTypeId, fileEntity.documentTypeId) &&
        Objects.equals(this.fileContents, fileEntity.fileContents) &&
        Objects.equals(this.fileName, fileEntity.fileName) &&
        Objects.equals(this.fileScope, fileEntity.fileScope) &&
        Objects.equals(this.id, fileEntity.id) &&
        Objects.equals(this.projectId, fileEntity.projectId) &&
        Objects.equals(this.type, fileEntity.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoEmbed, documentTypeId, fileContents, fileName, fileScope, id, projectId, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileEntity {\n");
    
    sb.append("    autoEmbed: ").append(toIndentedString(autoEmbed)).append("\n");
    sb.append("    documentTypeId: ").append(toIndentedString(documentTypeId)).append("\n");
    sb.append("    fileContents: ").append(toIndentedString(fileContents)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    fileScope: ").append(toIndentedString(fileScope)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

